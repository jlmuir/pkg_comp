# Copyright 2017 Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# * Neither the name of Google Inc. nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# \file pkgsrc.subr
# Utilities to interact with pkgsrc.

shtk_import cli


# Validates package names and resolves those that don't specify categories.
#
# Given a list of words of the form "category/pkgname" or "pkgname", ensures
# that those packages exist and prints the name of all valid packages.  For
# words of the form "pkgname", the output will be the corresponding
# "category/pkgname" for the entry.
#
# \param pkgsrcdir Path to the pkgsrc tree.
# \param ... Package names to expand.
#
# \return 0 if all packages exist; 1 otherwise.  Any non-existent packages
# are logged to stderr as a warning.
pkgsrc_expand_packages() {
    local pkgsrcdir="${1}"; shift

    local failed=no
    for package in "${@}"; do
        local candidate
        case "${package}" in
            */*) candidate="${package}" ;;
            *) candidate="$(cd "${pkgsrcdir}" \
                && echo */"${package}/Makefile" | cut -d / -f -2)" ;;
        esac
        if [ ! -e "${pkgsrcdir}/${candidate}/Makefile" ]; then
            shtk_cli_warning "Package ${package} does not exist"
            failed=yes
        else
            echo "${candidate}"
        fi
    done
    [ "${failed}" = no ]
}
